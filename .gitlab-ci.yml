# .gitlab-ci.yml
#
stages:
  - test
  - build
  - publish

image:                             parity/rust:nightly

variables:
  CI_SERVER_NAME:                  "GitLab CI"
  CARGO_HOME:                      "${CI_PROJECT_DIR}/.cargo"
  # have OS based build containers in the future
  DOCKER_OS:                       "ubuntu:xenial"
  ARCH:                            "x86_64"



cache:
  key:                             "${CI_JOB_NAME}"
  paths:
    - ./.cargo/


.collect_artifacts:                &collect_artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
    - target/release/




#### stage:                        test


test:rust:stable:                  &test
  stage:                           test
  variables:
    RUST_TOOLCHAIN: stable
    TARGET: native
  only:
    - triggers
    - tags
    - master
    - schedules
    - web
    - /^pr-[0-9]+$/
    - /^[0-9]+$/

  tags:
    - linux-docker
  script:
    - time cargo test --all --release --verbose --locked

.optional_test:                    &optional_test
  <<:                              *test
  allow_failure:                   true
  only:
    - master




#### stage:                        build

build:rust:linux:release:          &build
  stage:                           build
  <<:                              *collect_artifacts
  only:
    - master
    - tags
    - web
    - ci-s3-upload
  tags:
    - linux-docker
  before_script:
   - ./scripts/build.sh
  script:
    - time cargo build --release --verbose;
    - echo -n "Substrate version = "
    - ./target/release/substrate --version | 
      sed -n -r 's/^substrate ([0-9.]+.*-[0-9a-f]{7,13})-.*$/\1/p' |
      tee ./target/release/VERSION
    - sha256sum ./target/release/substrate | tee ./target/release/substrate.sha256




#### stage:                        publish

.publish:                          &publish
  stage:                           publish
  dependencies:
    - build:rust:linux:release
  cache: {}
  only:
    - master
    - tags
    - web
    - ci-s3-upload


publish:docker:release:
  <<:                              *publish
  tags:
    - shell
  variables:
    DOCKERFILE: scripts/docker/Dockerfile
    CONTAINER_IMAGE: parity/substrate
  script:
    - VERSION="$(cat ./target/release/VERSION)"
    - exit 0
    - test "$Docker_Hub_User_Parity" -a "$Docker_Hub_Pass_Parity"
        || ( echo "no docker credentials provided"; exit 1 )
    - docker login -u "$Docker_Hub_User_Parity" -p "$Docker_Hub_Pass_Parity"
    - docker info
    - docker build --tag $CONTAINER_IMAGE:$VERSION --tag $CONTAINER_IMAGE:latest -f $DOCKERFILE ./target/release/
    - docker push $CONTAINER_IMAGE:$VERSION
    - docker push $CONTAINER_IMAGE:latest
  after_script:
    - docker logout


publish:s3:release:
  <<:                              *publish
  image:                           mesosphere/aws-cli
  variables:
    BUCKET:                        "releases.parity.io"
    PREFIX:                        "substrate/${ARCH}-${DOCKER_OS}"
  script:
    - s3 sync ./target/release/ s3://${BUCKET}/${PREFIX}/$(cat ./target/release/VERSION)/
  after_script:
    - s3 ls s3://${BUCKET}/${PREFIX}/
  tags:
    - linux-docker



